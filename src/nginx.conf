# Configuration pour le serveur web Nginx

# Définition des workers
worker_processes auto;

# Événements
events {
    worker_connections 1024;
}

http {
    # Paramètres généraux
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Configuration des serveurs

    # Serveur pour l'application Spring Boot (pour le server_name indiqué l'url ou adresse IP)
    server {
        listen 40;
        server_name luxiergerie.tech;

        # Emplacement du fichier racine de l'application Spring Boot
        location / {
            proxy_pass http://app:8090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Configuration des en-têtes HTTP
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        return 301 https://www.luxiergerie.tech$request_uri;
    }

    # Serveur pour les autres services Docker
    server {
        listen 8080;

        # Emplacement du fichier racine des autres services Docker
        location / {
            return 404; # Ou une erreur appropriée
        }
    }
}

# Configuration pour Nginx dans l'image docker
# user nginx;
# worker_processes auto;
# pid /run/nginx.pid;
# events {
#     worker_connections 1024;
# }
# http {
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;

#     sendfile on;
#     keepalive_timeout 65;

#     server {
#         listen 80;
#         # Changer le nom du serveur avec l'IP de l'instance ou le nom de domaine
#         server_name ec2-51-44-14-185.eu-west-3.compute.amazonaws.com; Ou nom de domaine luxiergerie.tech www.luxiergerie.tech;

        # # Le root ici pointe vers le dossier principal contenant les fichiers statiques
        # root /usr/share/nginx/html/luxiergerie/fr;
        # index index.html;

        # location / {
        #     # Le root pointe vers le sous-dossier contenant les fichiers Angular
        #     root /usr/share/nginx/html/luxiergerie/fr/fr;
        #     index index.html;
        #     try_files $uri $uri/ /index.html;
        # }

#         # Gestion des fichiers JS, CSS et fonts avec ajout de headers appropriés
#         location ~ \.js$ {
#             add_header Content-Type application/javascript;
#         }

#         location ~ \.css$ {
#             add_header Content-Type text/css;
#         }

#         location ~ \.woff2?$ {
#             add_header Content-Type font/woff2;
#         }

#         # Redirection des requêtes vers le serveur de l'API backend
#         location /api {
#             # Proxy pass vers le backend
#             proxy_pass http://51.44.14.185:9080;

#             # Paramètres de proxy pour s'assurer que les headers sont correctement transmis
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # Ajout des headers CORS pour gérer les requêtes cross-origin
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Content-Type, Accept';

#             # Gestion des requêtes OPTIONS pour éviter une erreur CORS lors des pré-requêtes
#             if ($request_method = 'OPTIONS') {
#                 return 204;
#             }
#         }

#         # Ajout d'une gestion des erreurs pour améliorer le debug
#         error_page 404 /404.html;
#         location = /404.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }

# Commande depuis EC2 afin d'injecter un fichier d'import SQL
#mysql -h <RDS endpoint> -P 3306 -u <username> -p <database name> </path/to/file.sql>

# ## Configuration Nginx pour SSL et HTTPS (nginx présent sur EC2 avec CERBOT pour le reverse proxy)
# Paramètres globaux de Nginx
# user nginx;
# worker_processes auto;
# pid /run/nginx.pid;

# events {
#     worker_connections 1024;
# }

# http {
#     # Redirection HTTP vers HTTPS
#     server {
#         listen 80;
#         server_name luxiergerie.tech www.luxiergerie.tech;

#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }

#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }

#     # Configuration HTTPS avec reverse proxy
#     server {
#         listen 443 ssl;
#         server_name luxiergerie.tech www.luxiergerie.tech;

#         ssl_certificate /etc/letsencrypt/live/luxiergerie.tech/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/luxiergerie.tech/privkey.pem;
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_ciphers HIGH:!aNULL:!MD5;

#         # Reverse proxy pour le frontend (Angular app)
#         location / {
#             proxy_pass http://localhost:8081;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy pour le backend
#         location /api {
#             proxy_pass http://localhost:9080;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Content-Type, Accept';

#             if ($request_method = 'OPTIONS') {
#                 return 204;
#             }
#         }

#         error_page 404 /404.html;
#         location = /404.html {
#             root /usr/share/nginx/html;
#         }
#     }
# }
